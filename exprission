def analyze_face(frame):
    try:
        analysis = DeepFace.analyze(frame, actions=['age', 'emotion'], enforce_detection=False)
        age = analysis.get('age', 'Unknown')
        emotion = analysis.get('dominant_emotion', 'Unknown')
        return age, emotion
    except Exception as e:
        print(f"Error analyzing face: {e}")
        return None, None

def main():
    # Access the webcam
    cap = cv2.VideoCapture(0)
    
    if not cap.isOpened():
        print("Error: Cannot access the camera.")
        return
    
    print("Press 'q' to quit.")
    
    while True:
        # Read a frame from the webcam
        ret, frame = cap.read()
        if not ret:
            print("Error: Unable to capture frame.")
            break
        
        # Flip the frame (optional, for mirror effect)
        frame = cv2.flip(frame, 1)
        
        # Analyze the frame
        age, emotion = analyze_face(frame)
        
        # Display results on the frame
        if age and emotion:
            text = f"Age: {age}, Emotion: {emotion}"
            cv2.putText(frame, text, (10, 30), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 2, cv2.LINE_AA)
        
        # Show the frame
        cv2.imshow('Camera', frame)
        
        # Break the loop on 'q' key press
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break
    
    # Release the camera and close windows
    cap.release()
    cv2.destroyAllWindows()

if __name__ == "__main__":
    main()
